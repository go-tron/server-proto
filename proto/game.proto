syntax = "proto3";

package game.server;
import "base.proto";
import "control.proto";
import "google/protobuf/empty.proto";

option go_package = "../pb";

service Game {
  rpc NodeOpenSrv (google.protobuf.Empty) returns (google.protobuf.Empty) {}
  rpc NodeCloseSrv (google.protobuf.Empty) returns (google.protobuf.Empty) {}
  rpc TableCountSrv (google.protobuf.Empty) returns (TableCount) {}
  rpc TableFindSrv (TableIdReq) returns (TableCount) {}
  rpc TableListSrv (google.protobuf.Empty) returns (TableList) {}
  rpc TableGetSrv (TableIdReq) returns (TableVO) {}
  rpc TableCloseSrv (TableIdReq) returns (google.protobuf.Empty) {}
}

message TableCount {
  uint64 Total = 1;
}

message TableList {
  repeated TableListVO Tables = 1;
}

message TableIdReq {
  int64 TableId = 1;
}

enum GameStatus {
  GameStatusUnspecified = 0;
  GameStatusStarted = 2; //已开局
  GameStatusCallRate = 3; //叫分中
  GameStatusCallDouble = 4; //叫加倍中
  GameStatusPlaying = 5; //出牌中
  GameStatusDeckEnd = 6; //本副牌结算中
}

message GamePlay {
  int64 User = 1;
  string Cards = 2;
}

message Sequence {
  string Time = 1;
  int64 User = 2;
  Action Action = 3;
  int64 Timeout = 4;
  bool Reacted = 5;
}

message UserVO {
  bool Robot = 1;
  int64 UserId = 2;
  string UserNo = 3;
  string Nickname = 4;
  string Avatar = 5;
  uint32 Gender = 6;
  uint32 Seat = 8;
  bool Joined = 9;
  bool Ready = 10;
  bool Online = 11;
  bool Leaved = 12;
  bool Hosted = 13;
  int32 Score = 14;
  int32 Rank = 15;
  bool Entered = 16;
  bool Landlord = 17;
  int32 DeckScore = 18;
  int32 TableScore = 20;
  uint32 BaseRate = 21;
  bool BaseRateCalled = 22;
  uint32 Double = 23;
  uint32 DoubleRate = 24;
  bool DoubleCalled = 25;
  uint32 Rate = 26;
  bool Winner = 27;
  string Cards = 28;
  string CardSetList = 29;
  string HoldingCards = 30;
  uint32 PlayedHands = 31;
  string LastCards = 32;
  uint32 VoteState = 33;
}

message GameRecord {
  int64 id = 1;
  int64 User = 2;
  string Cards = 3;
  bool Landlord = 4;
  int32 Score = 5;
  int32 StartScore = 6;
  int32 EndScore = 7;
}

message GameVO {
  int64 DeckId = 3;
  uint32 DeckNo = 4;
  string StartAt = 5;
  string EndAt = 6;
  repeated GameRecord GameRecords = 7;
  GameStatus GameStatus = 8;
  uint32 RateCalledTimes = 9;
  int64 CurrentUser = 10;
  int64 NextUser = 11;
  string Cards = 12;
  string HoldingCards = 13;
  string PlayedCards = 14;
  string HoleCards = 15;
  GamePlay LastPlay = 16;
  int64 Caller = 17;
  int64 Landlord = 18;
  uint32 BombCount = 19;
  uint32 Spring = 20;
  RateDetails RateDetails = 21;
  repeated Sequence SequenceList = 22;
}

message TableVO {
  TableConfig Config = 1;
  string StartAt = 2;
  uint64 Lifetime = 3; //存在时间
  TableStatus TableStatus = 4;
  uint32 DeckNo = 5;
  repeated UserVO Users = 6;
  repeated GameVO Games = 7;
}

message TableListVO {
  int64 GameId = 1; //游戏ID
  int64 TableId = 2; //牌桌ID
  int64 RoundId = 3; //轮次ID
  GameType GameType = 4; //游戏类型
  GameCategory GameCategory = 5; //游戏类别
  string Title = 6; //游戏标题
  string StartAt = 7;
  uint64 Lifetime = 8; //存在时间
  TableStatus TableStatus = 9;
  uint32 DeckNo = 10;
  repeated int64 Users = 11;
}
