// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.24.4
// source: console.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UserData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Robot          bool   `protobuf:"varint,1,opt,name=Robot,proto3" json:"Robot,omitempty"`
	UserId         int64  `protobuf:"varint,2,opt,name=UserId,proto3" json:"UserId,omitempty"`
	UserNo         string `protobuf:"bytes,3,opt,name=UserNo,proto3" json:"UserNo,omitempty"`
	Nickname       string `protobuf:"bytes,4,opt,name=Nickname,proto3" json:"Nickname,omitempty"`
	Avatar         string `protobuf:"bytes,5,opt,name=Avatar,proto3" json:"Avatar,omitempty"`
	Gender         uint32 `protobuf:"varint,6,opt,name=Gender,proto3" json:"Gender,omitempty"`
	Seat           uint32 `protobuf:"varint,8,opt,name=Seat,proto3" json:"Seat,omitempty"`
	Joined         bool   `protobuf:"varint,9,opt,name=Joined,proto3" json:"Joined,omitempty"`
	Ready          bool   `protobuf:"varint,10,opt,name=Ready,proto3" json:"Ready,omitempty"`
	Online         bool   `protobuf:"varint,11,opt,name=Online,proto3" json:"Online,omitempty"`
	Leaved         bool   `protobuf:"varint,12,opt,name=Leaved,proto3" json:"Leaved,omitempty"`
	Hosted         bool   `protobuf:"varint,13,opt,name=Hosted,proto3" json:"Hosted,omitempty"`
	Score          int32  `protobuf:"varint,14,opt,name=Score,proto3" json:"Score,omitempty"`
	Rank           int32  `protobuf:"varint,15,opt,name=Rank,proto3" json:"Rank,omitempty"`
	Entered        bool   `protobuf:"varint,16,opt,name=Entered,proto3" json:"Entered,omitempty"`
	Landlord       bool   `protobuf:"varint,17,opt,name=Landlord,proto3" json:"Landlord,omitempty"`
	DeckScore      int32  `protobuf:"varint,18,opt,name=DeckScore,proto3" json:"DeckScore,omitempty"`
	AbsDeckScore   int32  `protobuf:"varint,19,opt,name=AbsDeckScore,proto3" json:"AbsDeckScore,omitempty"`
	TableScore     int32  `protobuf:"varint,20,opt,name=TableScore,proto3" json:"TableScore,omitempty"`
	BaseRate       uint32 `protobuf:"varint,21,opt,name=BaseRate,proto3" json:"BaseRate,omitempty"`
	BaseRateCalled bool   `protobuf:"varint,22,opt,name=BaseRateCalled,proto3" json:"BaseRateCalled,omitempty"`
	Double         uint32 `protobuf:"varint,23,opt,name=Double,proto3" json:"Double,omitempty"`
	DoubleRate     uint32 `protobuf:"varint,24,opt,name=DoubleRate,proto3" json:"DoubleRate,omitempty"`
	DoubleCalled   bool   `protobuf:"varint,25,opt,name=DoubleCalled,proto3" json:"DoubleCalled,omitempty"`
	Rate           uint32 `protobuf:"varint,26,opt,name=Rate,proto3" json:"Rate,omitempty"`
	Winner         bool   `protobuf:"varint,27,opt,name=Winner,proto3" json:"Winner,omitempty"`
	Cards          string `protobuf:"bytes,28,opt,name=Cards,proto3" json:"Cards,omitempty"`
	CardSetList    string `protobuf:"bytes,29,opt,name=CardSetList,proto3" json:"CardSetList,omitempty"`
	HoldingCards   string `protobuf:"bytes,30,opt,name=HoldingCards,proto3" json:"HoldingCards,omitempty"`
	PlayedHands    uint32 `protobuf:"varint,31,opt,name=PlayedHands,proto3" json:"PlayedHands,omitempty"`
	LastCards      string `protobuf:"bytes,32,opt,name=LastCards,proto3" json:"LastCards,omitempty"`
}

func (x *UserData) Reset() {
	*x = UserData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_console_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserData) ProtoMessage() {}

func (x *UserData) ProtoReflect() protoreflect.Message {
	mi := &file_console_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserData.ProtoReflect.Descriptor instead.
func (*UserData) Descriptor() ([]byte, []int) {
	return file_console_proto_rawDescGZIP(), []int{0}
}

func (x *UserData) GetRobot() bool {
	if x != nil {
		return x.Robot
	}
	return false
}

func (x *UserData) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UserData) GetUserNo() string {
	if x != nil {
		return x.UserNo
	}
	return ""
}

func (x *UserData) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *UserData) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *UserData) GetGender() uint32 {
	if x != nil {
		return x.Gender
	}
	return 0
}

func (x *UserData) GetSeat() uint32 {
	if x != nil {
		return x.Seat
	}
	return 0
}

func (x *UserData) GetJoined() bool {
	if x != nil {
		return x.Joined
	}
	return false
}

func (x *UserData) GetReady() bool {
	if x != nil {
		return x.Ready
	}
	return false
}

func (x *UserData) GetOnline() bool {
	if x != nil {
		return x.Online
	}
	return false
}

func (x *UserData) GetLeaved() bool {
	if x != nil {
		return x.Leaved
	}
	return false
}

func (x *UserData) GetHosted() bool {
	if x != nil {
		return x.Hosted
	}
	return false
}

func (x *UserData) GetScore() int32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *UserData) GetRank() int32 {
	if x != nil {
		return x.Rank
	}
	return 0
}

func (x *UserData) GetEntered() bool {
	if x != nil {
		return x.Entered
	}
	return false
}

func (x *UserData) GetLandlord() bool {
	if x != nil {
		return x.Landlord
	}
	return false
}

func (x *UserData) GetDeckScore() int32 {
	if x != nil {
		return x.DeckScore
	}
	return 0
}

func (x *UserData) GetAbsDeckScore() int32 {
	if x != nil {
		return x.AbsDeckScore
	}
	return 0
}

func (x *UserData) GetTableScore() int32 {
	if x != nil {
		return x.TableScore
	}
	return 0
}

func (x *UserData) GetBaseRate() uint32 {
	if x != nil {
		return x.BaseRate
	}
	return 0
}

func (x *UserData) GetBaseRateCalled() bool {
	if x != nil {
		return x.BaseRateCalled
	}
	return false
}

func (x *UserData) GetDouble() uint32 {
	if x != nil {
		return x.Double
	}
	return 0
}

func (x *UserData) GetDoubleRate() uint32 {
	if x != nil {
		return x.DoubleRate
	}
	return 0
}

func (x *UserData) GetDoubleCalled() bool {
	if x != nil {
		return x.DoubleCalled
	}
	return false
}

func (x *UserData) GetRate() uint32 {
	if x != nil {
		return x.Rate
	}
	return 0
}

func (x *UserData) GetWinner() bool {
	if x != nil {
		return x.Winner
	}
	return false
}

func (x *UserData) GetCards() string {
	if x != nil {
		return x.Cards
	}
	return ""
}

func (x *UserData) GetCardSetList() string {
	if x != nil {
		return x.CardSetList
	}
	return ""
}

func (x *UserData) GetHoldingCards() string {
	if x != nil {
		return x.HoldingCards
	}
	return ""
}

func (x *UserData) GetPlayedHands() uint32 {
	if x != nil {
		return x.PlayedHands
	}
	return 0
}

func (x *UserData) GetLastCards() string {
	if x != nil {
		return x.LastCards
	}
	return ""
}

var File_console_proto protoreflect.FileDescriptor

var file_console_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x09, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x0a, 0x62, 0x61, 0x73, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd0, 0x06, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x05, 0x52, 0x6f, 0x62, 0x6f, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x6f, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x4e, 0x69,
	0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4e, 0x69,
	0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x16,
	0x0a, 0x06, 0x47, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06,
	0x47, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x65, 0x61, 0x74, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x53, 0x65, 0x61, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x4a, 0x6f,
	0x69, 0x6e, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x4a, 0x6f, 0x69, 0x6e,
	0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x52, 0x65, 0x61, 0x64, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x05, 0x52, 0x65, 0x61, 0x64, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x6e, 0x6c, 0x69,
	0x6e, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x48, 0x6f, 0x73, 0x74,
	0x65, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x48, 0x6f, 0x73, 0x74, 0x65, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x52, 0x61, 0x6e, 0x6b, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x52, 0x61, 0x6e, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x45, 0x6e,
	0x74, 0x65, 0x72, 0x65, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x45, 0x6e, 0x74,
	0x65, 0x72, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x4c, 0x61, 0x6e, 0x64, 0x6c, 0x6f, 0x72, 0x64,
	0x18, 0x11, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x4c, 0x61, 0x6e, 0x64, 0x6c, 0x6f, 0x72, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x44, 0x65, 0x63, 0x6b, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x12, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x44, 0x65, 0x63, 0x6b, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x22,
	0x0a, 0x0c, 0x41, 0x62, 0x73, 0x44, 0x65, 0x63, 0x6b, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x13,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x41, 0x62, 0x73, 0x44, 0x65, 0x63, 0x6b, 0x53, 0x63, 0x6f,
	0x72, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65,
	0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x63, 0x6f,
	0x72, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x42, 0x61, 0x73, 0x65, 0x52, 0x61, 0x74, 0x65, 0x18, 0x15,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x42, 0x61, 0x73, 0x65, 0x52, 0x61, 0x74, 0x65, 0x12, 0x26,
	0x0a, 0x0e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x61, 0x74, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x65, 0x64,
	0x18, 0x16, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x61, 0x74, 0x65,
	0x43, 0x61, 0x6c, 0x6c, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65,
	0x18, 0x17, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x52, 0x61, 0x74, 0x65, 0x18, 0x18, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0a, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x52, 0x61, 0x74, 0x65, 0x12, 0x22,
	0x0a, 0x0c, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x43, 0x61, 0x6c, 0x6c, 0x65, 0x64, 0x18, 0x19,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x43, 0x61, 0x6c, 0x6c,
	0x65, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x52, 0x61, 0x74, 0x65, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x04, 0x52, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x57, 0x69, 0x6e, 0x6e, 0x65, 0x72,
	0x18, 0x1b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x57, 0x69, 0x6e, 0x6e, 0x65, 0x72, 0x12, 0x14,
	0x0a, 0x05, 0x43, 0x61, 0x72, 0x64, 0x73, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x43,
	0x61, 0x72, 0x64, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x43, 0x61, 0x72, 0x64, 0x53, 0x65, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x43, 0x61, 0x72, 0x64, 0x53,
	0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x48, 0x6f, 0x6c, 0x64, 0x69, 0x6e,
	0x67, 0x43, 0x61, 0x72, 0x64, 0x73, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x48, 0x6f,
	0x6c, 0x64, 0x69, 0x6e, 0x67, 0x43, 0x61, 0x72, 0x64, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x64, 0x48, 0x61, 0x6e, 0x64, 0x73, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0b, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x64, 0x48, 0x61, 0x6e, 0x64, 0x73, 0x12, 0x1c, 0x0a, 0x09,
	0x4c, 0x61, 0x73, 0x74, 0x43, 0x61, 0x72, 0x64, 0x73, 0x18, 0x20, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x4c, 0x61, 0x73, 0x74, 0x43, 0x61, 0x72, 0x64, 0x73, 0x42, 0x07, 0x5a, 0x05, 0x2e, 0x2e,
	0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_console_proto_rawDescOnce sync.Once
	file_console_proto_rawDescData = file_console_proto_rawDesc
)

func file_console_proto_rawDescGZIP() []byte {
	file_console_proto_rawDescOnce.Do(func() {
		file_console_proto_rawDescData = protoimpl.X.CompressGZIP(file_console_proto_rawDescData)
	})
	return file_console_proto_rawDescData
}

var file_console_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_console_proto_goTypes = []interface{}{
	(*UserData)(nil), // 0: game.data.UserData
}
var file_console_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_console_proto_init() }
func file_console_proto_init() {
	if File_console_proto != nil {
		return
	}
	file_base_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_console_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_console_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_console_proto_goTypes,
		DependencyIndexes: file_console_proto_depIdxs,
		MessageInfos:      file_console_proto_msgTypes,
	}.Build()
	File_console_proto = out.File
	file_console_proto_rawDesc = nil
	file_console_proto_goTypes = nil
	file_console_proto_depIdxs = nil
}
